Option Explicit

Sub Import_Generic_CleanOpenPaste_KeepToday()
    Dim fd As FileDialog
    Dim filePath As String
    Dim wbSrc As Workbook
    Dim wsSrc As Worksheet
    Dim wsDATA As Worksheet, wsCONC As Worksheet
    Dim found As Range
    Dim lastRow As Long, lastCol As Long
    Dim gotData As Boolean
    Dim i As Long, s As String, p As Long
    Dim d As Variant, todayDate As Date

    ' Obtener hojas destino
    On Error Resume Next
    Set wsDATA = ThisWorkbook.Sheets("DATA")
    Set wsCONC = ThisWorkbook.Sheets("CONCILIACIÓN")
    If wsCONC Is Nothing Then Set wsCONC = ThisWorkbook.Sheets("CONCILIACION")
    On Error GoTo 0

    If wsDATA Is Nothing Or wsCONC Is Nothing Then
        MsgBox "Required sheets not found (DATA / CONCILIACIÓN).", vbCritical
        Exit Sub
    End If

    Application.ScreenUpdating = False
    Application.EnableEvents = False

    ' 1) Limpiar hojas
    wsDATA.Cells.Clear
    wsCONC.Cells.Clear

    ' 2) Pedir archivo de Excel
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    With fd
        .Title = "Select an Excel file"
        .Filters.Clear
        .Filters.Add "Excel Files", "*.xlsx;*.xlsm;*.xls;*.xlsb"
        .AllowMultiSelect = False
        If .Show <> -1 Then GoTo TidyExit
        filePath = .SelectedItems(1)
    End With

    ' 3) Abrir y pegar primera hoja en DATA!A1
    Set wbSrc = Workbooks.Open(Filename:=filePath)
    If wbSrc Is Nothing Then
        MsgBox "Couldn't open the selected Excel file.", vbCritical
        GoTo TidyExit
    End If

    Set wsSrc = wbSrc.Worksheets(1)
    gotData = False

    Set found = wsSrc.Cells.Find(What:="*", LookIn:=xlFormulas, LookAt:=xlPart, _
                                 SearchOrder:=xlByRows, SearchDirection:=xlPrevious, MatchCase:=False)
    If Not found Is Nothing Then
        lastRow = found.Row
        Set found = wsSrc.Cells.Find(What:="*", LookIn:=xlFormulas, LookAt:=xlPart, _
                                     SearchOrder:=xlByColumns, SearchDirection:=xlPrevious, MatchCase:=False)
        lastCol = found.Column
        wsSrc.Range(wsSrc.Cells(1, 1), wsSrc.Cells(lastRow, lastCol)).Copy wsDATA.Range("A1")
        gotData = True
    End If

    wbSrc.Close SaveChanges:=False

    If Not gotData Then
        MsgBox "The first sheet appears to be empty (no data found).", vbExclamation
        GoTo TidyExit
    End If

    ' 4) Columna G: dejar solo la fecha (quitar hora) y convertir a valor de fecha
    lastRow = wsDATA.Cells(wsDATA.Rows.Count, "G").End(xlUp).Row
    For i = 2 To lastRow
        s = Trim$(CStr(wsDATA.Cells(i, "G").Value))
        If Len(s) > 0 Then
            p = InStr(s, " ")
            If p > 0 Then s = Left$(s, p - 1) ' recorta lo que esté después del espacio
            On Error Resume Next
            d = CDate(s)                      ' intenta convertir a fecha
            On Error GoTo 0
            If IsDate(d) Then
                wsDATA.Cells(i, "G").Value = DateValue(d)
            Else
                ' si no se pudo convertir, marcar la celda vacía para que se elimine en el siguiente paso
                wsDATA.Cells(i, "G").ClearContents
            End If
        End If
    Next i
    wsDATA.Range("G2:G" & lastRow).NumberFormat = "yyyy-mm-dd"

    ' 5) Mantener SOLO las filas con la fecha de HOY en G (eliminar el resto)
    todayDate = Date
    lastRow = wsDATA.Cells(wsDATA.Rows.Count, "G").End(xlUp).Row
    For i = lastRow To 2 Step -1
        If Not IsDate(wsDATA.Cells(i, "G").Value) Then
            wsDATA.Rows(i).Delete
        ElseIf DateValue(wsDATA.Cells(i, "G").Value) <> todayDate Then
            wsDATA.Rows(i).Delete
        End If
    Next i

    MsgBox "Done: importado, columna G convertida a fecha y filtrado para dejar solo la fecha de hoy.", vbInformation

TidyExit:
    Application.CutCopyMode = False
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub
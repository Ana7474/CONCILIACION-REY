Option Explicit

Public Sub Import_CSV_Rebased_DeleteFailed_CAD_I_SwapJK_FixE_CopyAL()
    Dim fd As FileDialog
    Dim filePath As String
    Dim wbCSV As Workbook, wsCSV As Worksheet
    Dim wsDATA As Worksheet, wsCONC As Worksheet
    Dim lastRow As Long, lastCol As Long
    Dim i As Long, p As Long
    Dim s As String, d As Variant
    Dim r As Range, rr As Long
    Dim tmp As Variant
    Dim b As String
    Dim changed As Long

    ' Get sheets
    On Error Resume Next
    Set wsDATA = ThisWorkbook.Sheets("DATA")
    Set wsCONC = ThisWorkbook.Sheets("CONCILIACIÓN")
    If wsCONC Is Nothing Then Set wsCONC = ThisWorkbook.Sheets("CONCILIACION")
    On Error GoTo 0
    If wsDATA Is Nothing Or wsCONC Is Nothing Then
        MsgBox "Required sheets not found (DATA / CONCILIACIÓN).", vbCritical
        Exit Sub
    End If

    Application.ScreenUpdating = False
    Application.EnableEvents = False

    ' 1) Clear target sheets
    wsDATA.Cells.Clear
    wsCONC.Cells.Clear

    ' 2) Pick CSV
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    With fd
        .Title = "Seleccionar archivo CSV"
        .Filters.Clear
        .Filters.Add "CSV Files", "*.csv"
        .AllowMultiSelect = False
        If .Show <> -1 Then GoTo TidyExit
        filePath = .SelectedItems(1)
    End With

    ' 3) Open CSV and copy into DATA
    Set wbCSV = Workbooks.Open(Filename:=filePath)
    Set wsCSV = wbCSV.Sheets(1)

    lastRow = wsCSV.Cells(wsCSV.Rows.Count, "A").End(xlUp).Row
    lastCol = wsCSV.Cells(1, wsCSV.Columns.Count).End(xlToLeft).Column
    wsCSV.Range(wsCSV.Cells(1, 1), wsCSV.Cells(lastRow, lastCol)).Copy wsDATA.Range("A1")

    wbCSV.Close SaveChanges:=False

    ' 4) Delete rows where column A = "Failed" (case/space tolerant)
    lastRow = wsDATA.Cells(wsDATA.Rows.Count, "A").End(xlUp).Row
    For i = lastRow To 2 Step -1
        s = UCase$(Trim$(CStr(wsDATA.Cells(i, "A").Value)))
        If s = "FAILED" Then
            wsDATA.Rows(i).Delete
        End If
    Next i

    ' 5) CAD in column I → swap J<->K and flip H (B<->S)
    '    Normalize I before filtering/matching
    lastRow = wsDATA.Cells(wsDATA.Rows.Count, "I").End(xlUp).Row
    If lastRow >= 2 Then
        ' Pre-clean I (NBSP → space) + TRIM + UPPER
        wsDATA.Range("I2:I" & lastRow).Replace What:=Chr(160), Replacement:=" ", _
            LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=False
        Dim iRow As Long
        For iRow = 2 To lastRow
            If Not IsEmpty(wsDATA.Cells(iRow, "I").Value) Then
                wsDATA.Cells(iRow, "I").Value = UCase$(WorksheetFunction.Trim(CStr(wsDATA.Cells(iRow, "I").Value)))
            End If
        Next iRow

        ' Use AutoFilter to process only CAD rows
        If wsDATA.AutoFilterMode Then wsDATA.AutoFilterMode = False
        wsDATA.Range("A1").CurrentRegion.AutoFilter Field:=9, Criteria1:="=CAD"  ' I is the 9th column

        changed = 0
        On Error Resume Next
        For Each r In wsDATA.Range("A2:A" & lastRow).SpecialCells(xlCellTypeVisible).Cells
            rr = r.Row
            ' Swap J <-> K  (J=10, K=11)
            tmp = wsDATA.Cells(rr, "J").Value
            wsDATA.Cells(rr, "J").Value = wsDATA.Cells(rr, "K").Value
            wsDATA.Cells(rr, "K").Value = tmp

            ' Flip H between B and S (H=8)
            b = UCase$(WorksheetFunction.Trim(CStr(wsDATA.Cells(rr, "H").Value)))
            If b = "B" Then
                wsDATA.Cells(rr, "H").Value = "S"
            ElseIf b = "S" Then
                wsDATA.Cells(rr, "H").Value = "B"
            End If

            changed = changed + 1
        Next r
        On Error GoTo 0

        If wsDATA.AutoFilterMode Then wsDATA.AutoFilterMode = False
    End If

    ' 6) Dates: the old G is now in E → remove time, convert to date, format dd/mm/yyyy
    lastRow = wsDATA.Cells(wsDATA.Rows.Count, "E").End(xlUp).Row
    For i = 2 To lastRow
        s = CStr(wsDATA.Cells(i, "E").Value)
        ' normalize special spaces to regular space
        s = Replace$(s, Chr$(160), " ")
        s = Replace$(s, ChrW$(&H202F), " ")
        s = Trim$(s)
        ' cut at first space (or 'T' for ISO strings)
        p = InStr(s, " ")
        If p = 0 Then p = InStr(s, "T")
        If p > 0 Then s = Left$(s, p - 1)
        ' try to convert to real date
        On Error Resume Next
        d = CDate(s)
        On Error GoTo 0
        If IsDate(d) Then
            wsDATA.Cells(i, "E").Value = DateValue(d)
        Else
            wsDATA.Cells(i, "E").Value = s
        End If
    Next i
    If lastRow >= 2 Then
        wsDATA.Range("E2:E" & lastRow).NumberFormat = "dd/mm/yyyy"
    End If

    ' NOTE: you mentioned "H is now in L". We are not altering L here,
    ' just preserving it when we copy to CONCILIACIÓN below.

    ' 7) Copy A:L from DATA → CONCILIACIÓN (headers included, preserve formats)
    lastRow = wsDATA.Cells(wsDATA.Rows.Count, "A").End(xlUp).Row
    If lastRow >= 1 Then
        wsDATA.Range("A1:L" & lastRow).Copy
        wsCONC.Range("A1").PasteSpecial xlPasteAll
        Application.CutCopyMode = False
    End If

    MsgBox "Done." & vbCrLf & _
           "Deleted 'Failed' in A." & vbCrLf & _
           "CAD in I processed (J↔K, H flipped)." & vbCrLf & _
           "Time removed & date fixed in E." & vbCrLf & _
           "A:L copied to CONCILIACIÓN." & vbCrLf & _
           "CAD rows changed: " & changed, vbInformation

TidyExit:
    Application.CutCopyMode = False
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub
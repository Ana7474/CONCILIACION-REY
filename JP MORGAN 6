Sub ImportAndSave_JPMorgan()
    Dim fd As FileDialog
    Dim filePath As String
    Dim wbSrc As Workbook
    Dim wsSrc As Worksheet, wsDATA As Worksheet, wsCONC As Worksheet
    Dim wbNew As Workbook
    Dim lastRow As Long, lastCol As Long
    Dim rngSrc As Range
    Dim i As Long, s As String, p As Long
    Dim found As Range, gotData As Boolean
    Dim shellObj As Object
    Dim saveRoot As String, savePath As String, fileName As String, fullSave As String
    Dim d As Variant

    On Error Resume Next
    Set wsDATA = ThisWorkbook.Sheets("DATA")
    Set wsCONC = ThisWorkbook.Sheets("CONCILIACIÓN")
    On Error GoTo 0
    If wsDATA Is Nothing Or wsCONC Is Nothing Then
        MsgBox "Required sheets not found (DATA / CONCILIACIÓN).", vbCritical
        Exit Sub
    End If

    Application.ScreenUpdating = False
    Application.EnableEvents = False

    ' 1) Clean both sheets
    wsDATA.Cells.Clear
    wsCONC.Cells.Clear

    ' 2) Ask for an Excel file
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    With fd
        .Title = "Select an Excel file"
        .Filters.Clear
        .Filters.Add "Excel Files", "*.xlsx;*.xlsm;*.xls;*.xlsb"
        .AllowMultiSelect = False
        If .Show <> -1 Then GoTo TidyExit
        filePath = .SelectedItems(1)
    End With

    ' 3) Open source workbook
    Set wbSrc = Workbooks.Open(Filename:=filePath)
    If wbSrc Is Nothing Then
        MsgBox "Couldn't open the Excel file.", vbCritical
        GoTo TidyExit
    End If

    ' 4) Find data range and copy to DATA
    gotData = False
    For Each wsSrc In wbSrc.Worksheets
        Set found = wsSrc.Cells.Find(What:="*", LookIn:=xlFormulas, LookAt:=xlPart, _
                                     SearchOrder:=xlByRows, SearchDirection:=xlPrevious, MatchCase:=False)
        If Not found Is Nothing Then
            lastRow = found.Row
            Set found = wsSrc.Cells.Find(What:="*", LookIn:=xlFormulas, LookAt:=xlPart, _
                                         SearchOrder:=xlByColumns, SearchDirection:=xlPrevious, MatchCase:=False)
            lastCol = found.Column

            Set rngSrc = wsSrc.Range(wsSrc.Cells(1, 1), wsSrc.Cells(lastRow, lastCol))
            rngSrc.Copy wsDATA.Range("A1")
            gotData = True
            Exit For
        End If
    Next wsSrc
    wbSrc.Close SaveChanges:=False

    If Not gotData Then
        MsgBox "No data found in the selected workbook.", vbExclamation
        GoTo TidyExit
    End If

    ' 5) Clean column B in DATA: first word, uppercase
    lastRow = wsDATA.Cells(wsDATA.Rows.Count, "B").End(xlUp).Row
    For i = 2 To lastRow
        s = Trim(CStr(wsDATA.Cells(i, "B").Value))
        If Len(s) > 0 Then
            p = InStr(s, " ")
            If p > 0 Then s = Left$(s, p - 1)
            wsDATA.Cells(i, "B").Value = UCase$(s)
        End If
    Next i

    ' 6) Keep only rows where column G is today's date
    lastRow = wsDATA.Cells(wsDATA.Rows.Count, "A").End(xlUp).Row
    For i = lastRow To 2 Step -1
        s = Trim(CStr(wsDATA.Cells(i, "G").Value))
        If s = "" Then
            wsDATA.Rows(i).Delete
        Else
            If IsDate(wsDATA.Cells(i, "G").Value) Then
                d = DateValue(wsDATA.Cells(i, "G").Value)
            Else
                ' Trim time if present, normalize separators, then try convert
                p = InStr(s, " ")
                If p > 0 Then s = Left$(s, p - 1)
                s = Replace(Replace(s, ".", "/"), "-", "/")
                On Error Resume Next
                d = DateValue(CDate(s))
                On Error GoTo 0
            End If

            If Not IsDate(d) Then
                wsDATA.Rows(i).Delete
            ElseIf d <> Date Then
                wsDATA.Rows(i).Delete
            Else
                ' keep row, also set the cell to the date value to drop any time
                wsDATA.Cells(i, "G").Value = d
            End If
        End If
    Next i
    ' Optional: format G nicely
    If wsDATA.Cells(wsDATA.Rows.Count, "A").End(xlUp).Row >= 2 Then
        wsDATA.Range("G2:G" & wsDATA.Cells(wsDATA.Rows.Count, "A").End(xlUp).Row).NumberFormat = "[$-en-US]dd-mmm-yyyy"
    End If

    ' 7) Copy DATA to CONCILIACIÓN
    wsCONC.Cells.Clear
    wsDATA.UsedRange.Copy
    wsCONC.Range("A1").PasteSpecial xlPasteAll
    Application.CutCopyMode = False

    ' 8) Save copy in Documents/Documentos\VARIOS\INTERMEDIARIOS CASA DE BOLSA\ as JP MORGAN_yyyymmdd.xlsx
    Set shellObj = CreateObject("WScript.Shell")
    saveRoot = shellObj.SpecialFolders("MyDocuments")
    savePath = saveRoot & "\VARIOS\INTERMEDIARIOS CASA DE BOLSA\"

    If Dir(savePath, vbDirectory) = "" Then
        MsgBox "The folder does not exist: " & vbCrLf & savePath, vbCritical
        GoTo TidyExit
    End If

    fileName = "JP MORGAN_" & Format(Date, "yyyymmdd") & ".xlsx"
    fullSave = savePath & fileName

    wsCONC.Copy
    Set wbNew = ActiveWorkbook
    On Error Resume Next
    wbNew.Sheets(1).Name = "Hoja1"
    On Error GoTo 0

    Application.DisplayAlerts = False
    wbNew.SaveAs Filename:=fullSave, FileFormat:=xlOpenXMLWorkbook
    Application.DisplayAlerts = True
    wbNew.Close SaveChanges:=False

    MsgBox "Done: imported, filtered by today's date (G), copied to CONCILIACIÓN, and saved as:" & vbCrLf & fullSave, vbInformation

TidyExit:
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub
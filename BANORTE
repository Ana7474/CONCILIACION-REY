Option Explicit

Public Sub Import_CSV_UTF8_To_DATA()
    Dim fd As FileDialog
    Dim filePath As String
    Dim wsDATA As Worksheet, wsCONC As Worksheet
    Dim wbCSV As Workbook, wsCSV As Worksheet
    Dim found As Range
    Dim lastRow As Long, lastCol As Long
    Dim gotData As Boolean

    ' Get sheets
    On Error Resume Next
    Set wsDATA = ThisWorkbook.Sheets("DATA")
    Set wsCONC = ThisWorkbook.Sheets("CONCILIACIÓN")
    If wsCONC Is Nothing Then Set wsCONC = ThisWorkbook.Sheets("CONCILIACION")
    On Error GoTo 0

    If wsDATA Is Nothing Or wsCONC Is Nothing Then
        MsgBox "No se encontraron las hojas (DATA / CONCILIACIÓN).", vbCritical
        Exit Sub
    End If

    Application.ScreenUpdating = False
    Application.EnableEvents = False

    ' 1) Clear both sheets completely
    ClearSheetCompletely wsDATA
    ClearSheetCompletely wsCONC

    ' 2) Ask for CSV UTF-8 file
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    With fd
        .Title = "Seleccionar archivo CSV (UTF-8)"
        .Filters.Clear
        .Filters.Add "CSV UTF-8", "*.csv"
        .AllowMultiSelect = False
        If .Show <> -1 Then GoTo TidyExit
        filePath = .SelectedItems(1)
    End With

    ' 3) Open as UTF-8 using OpenText, then copy to DATA
    '    (OpenText creates a new workbook from the CSV)
    Workbooks.OpenText _
        Filename:=filePath, _
        Origin:=65001, _                  ' UTF-8
        DataType:=xlDelimited, _
        Comma:=True, _
        Other:=False, _
        TrailingMinusNumbers:=True

    Set wbCSV = ActiveWorkbook
    Set wsCSV = wbCSV.Sheets(1)

    ' Find used range robustly
    gotData = False
    Set found = wsCSV.Cells.Find(What:="*", LookIn:=xlFormulas, LookAt:=xlPart, _
                                 SearchOrder:=xlByRows, SearchDirection:=xlPrevious, MatchCase:=False)
    If Not found Is Nothing Then
        lastRow = found.Row
        Set found = wsCSV.Cells.Find(What:="*", LookIn:=xlFormulas, LookAt:=xlPart, _
                                     SearchOrder:=xlByColumns, SearchDirection:=xlPrevious, MatchCase:=False)
        lastCol = found.Column
        wsCSV.Range(wsCSV.Cells(1, 1), wsCSV.Cells(lastRow, lastCol)).Copy wsDATA.Range("A1")
        gotData = True
    End If

    wbCSV.Close SaveChanges:=False

    If Not gotData Then
        MsgBox "El CSV está vacío o no se detectó información.", vbExclamation
        GoTo TidyExit
    End If

    MsgBox "Listo: CSV (UTF-8) importado en DATA.", vbInformation

TidyExit:
    Application.CutCopyMode = False
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub

' Helper: fully clear a sheet (unmerge, remove filters/hidden rows, conditional formats, then clear)
Private Sub ClearSheetCompletely(ByVal ws As Worksheet)
    On Error Resume Next
    If ws.AutoFilterMode Then ws.AutoFilterMode = False
    ws.Cells.EntireRow.Hidden = False
    ws.Cells.EntireColumn.Hidden = False
    ws.Cells.UnMerge
    ws.Cells.FormatConditions.Delete
    ws.Cells.Clear
    On Error GoTo 0
End Sub